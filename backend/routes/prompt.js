function buildPrompt(count, difficulty, text) {
  const difficultyText = {
    easy: "f√°cil",
    medium: "m√©dio",
    hard: "dif√≠cil",
  };

  return `
Voc√™ √© um gerador de quest√µes de m√∫ltipla escolha em portugu√™s (Brasil), baseadas em textos t√©cnicos. Gere exatamente ${count} quest√µes de dificuldade "${
    difficultyText[difficulty]
  }" com base no texto abaixo.

---

üìå FORMATO DE SA√çDA (JSON estritamente v√°lido):

[
  {
    "type": "multiple_choice",
    "text": "Texto da pergunta...",
    "options": ["Alternativa A", "Alternativa B", "Alternativa C", "Alternativa D"],
    "correctAnswer": 2,
    "difficulty": "${difficulty}"
  },
  ...
]

---

üìã INSTRU√á√ïES:

1. Retorne **apenas o array JSON**, sem explica√ß√µes, coment√°rios ou quebras de padr√£o.
2. Cada quest√£o deve conter:
   - Um campo "text" com a pergunta.
   - Um array "options" com 4 alternativas como **strings puras** (sem letras ou n√∫meros).
   - Um campo "correctAnswer" com o √≠ndice da alternativa correta (de 0 a 3).
   - Um campo "difficulty" com o valor: "${difficulty}".
3. As alternativas devem ser plaus√≠veis, distintas e sem duplicatas. As alternativas corretas devem ser variadas (n√£o sempre a primeira) e o conte√∫do das op√ß√µes n√£o pode se repetir (ex: nada de ["1", "1", "2", "3"]).
4. A alternativa correta deve variar entre as posi√ß√µes (n√£o sempre ser a primeira).
5. O JSON final deve ser estritamente v√°lido (sem erros de formata√ß√£o).

---

üß† DIFERENCIA√á√ÉO POR DIFICULDADE:

- **f√°cil**: quest√£o direta, com resposta clara e expl√≠cita no texto.
- **m√©dio**: exige interpreta√ß√£o de dois ou mais trechos, compara√ß√£o, ou racioc√≠nio l√≥gico.
- **dif√≠cil**: exige s√≠ntese de ideias, an√°lise cr√≠tica ou infer√™ncia a partir do texto.

---

üìÑ TEXTO BASE:
"""
${text.substring(0, 6000)}
"""
  `;
}

module.exports = { buildPrompt };
